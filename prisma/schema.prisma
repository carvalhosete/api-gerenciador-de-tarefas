// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL" ) // Pega a URL do banco do arquivo .env
}

// MODELO PARA A TABELA DE USUÁRIOS
model User {
  id        String   @id @default(uuid()) // Chave primária, um ID único universal
  email     String   @unique // O email de cada usuário deve ser único
  name      String
  password  String   // Vamos guardar a senha (criptografada, claro)
  createdAt DateTime @default(now()) // Data de criação do registro
  updatedAt DateTime @updatedAt // Data da última atualização do registro

  tasks Task[] // Um usuário pode ter uma lista de tarefas (relação)
}

// MODELO PARA A TABELA DE TAREFAS
model Task {
  id          String   @id @default(uuid())
  title       String
  description String?  // O '?' torna o campo opcional (pode ser nulo)
  isDone      Boolean  @default(false) // A tarefa começa como "não concluída"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // --- Relação com o Usuário ---
  owner   User   @relation(fields: [ownerId], references: [id]) // Define a relação
  ownerId String // Chave estrangeira para conectar com a tabela User
}
